<launch>
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode">
  <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
  <param name="serial_baudrate"     type="int"    value="115200"/>
  <param name="frame_id"            type="string" value="base_laser"/>
  <param name="inverted"            type="bool"   value="false"/>
  <param name="angle_compensate"    type="bool"   value="true"/>
  <remap from="scan" to="scan_raw"/>
  </node>
  <rosparam command = "load" file = "$(find xbot_lidar)/config/xbot_lidar_blocked_angles.yaml" param = "blocked_angles"/>
  <rosparam command = "load" file = "$(find xbot_lidar)/config/xbot_lidar_robot_footprint.yaml" param="footprint"/>
  <!-- <node name="ModifyLaserscanNode" pkg="xbot_lidar" type="ModifyLaserscan.py" /> -->
  <node name="LaserScanToPointCloud" pkg="xbot_lidar" type="laserScanToPointcloud"/>
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="point_cloud"/>
        <rosparam>
            target_frame: base_link
            transform_tolerance: 0.01
            min_height: 0.0
            max_height: 1.0

            angle_min: -3.14 # -M_PI
            angle_max: 3.14 # M_PI
            angle_increment: 0.01745 # 1 deg in rad
            scan_time: 0.1
            range_min: 0.45
            range_max: 10.0
            use_inf: true

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 0
        </rosparam>
    </node>
</launch>
